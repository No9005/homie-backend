# Generated by Django 5.0.1 on 2024-01-20 17:33

import data.models.recurring_transaction
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Business',
                'verbose_name_plural': 'Businesses',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('description', models.TextField(max_length=250, verbose_name='Description')),
                ('date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Booking Date')),
                ('cash_flow_type', models.CharField(choices=[('income', 'income'), ('spending', 'spending')], default='spending', max_length=50, verbose_name='Cash Flow type')),
                ('private', models.BooleanField(blank=True, default=False, verbose_name='Private Transaction')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
            },
        ),
        migrations.CreateModel(
            name='TaxConsultant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=20, verbose_name='Firstname')),
                ('lastname', models.CharField(max_length=20, verbose_name='Lastname')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street')),
                ('house_nr', models.IntegerField(blank=True, null=True, verbose_name='House Nr.')),
                ('postal', models.IntegerField(blank=True, null=True, verbose_name='Postal')),
                ('city', models.CharField(blank=True, max_length=20, null=True, verbose_name='City')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=20, null=True, region=None, verbose_name='Phone')),
                ('email', models.CharField(blank=True, max_length=50, null=True, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Tax consultant',
                'verbose_name_plural': 'Tax consultants',
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('IBAN', models.CharField(blank=True, max_length=60, null=True, unique=True, verbose_name='IBAN')),
                ('owner', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Bank account',
                'verbose_name_plural': 'Bank accounts',
            },
        ),
        migrations.CreateModel(
            name='RecurringTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.transaction')),
                ('day', models.IntegerField(blank=True, default=1, validators=[data.models.recurring_transaction.between_one_and_thirty_one], verbose_name='Day')),
            ],
            options={
                'verbose_name': 'Recurring transaction',
                'verbose_name_plural': 'Recurring transactions',
            },
            bases=('data.transaction',),
        ),
        migrations.AddField(
            model_name='transaction',
            name='bank_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='data.bankaccount', verbose_name='Bank Account'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='business_related',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='data.business', verbose_name='Business related'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='data.category', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='tax_consultant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='data.taxconsultant', verbose_name='Tax Consultant'),
        ),
    ]
